<?xml version="1.0" encoding="UTF-8"?>
<rules>
  <metadata>
    <name>Memory Bank Workflow Enforcement</name>
    <description>External enforcement of Memory Bank First Pattern using RooCode native capabilities</description>
    <version>1.0</version>
    <created>2025-08-03</created>
  </metadata>

  <!-- Session Initialization Rules -->
  <rule id="session-init-001" priority="critical" blocking="true">
    <name>Memory Bank Session Initialization</name>
    <trigger>session_start</trigger>
    <condition>
      <and>
        <file_exists path="memory-bank/productContext.md"/>
        <file_exists path="memory-bank/activeContext.md"/>
        <file_exists path="memory-bank/systemPatterns.md"/>
        <file_exists path="memory-bank/decisionLog.md"/>
        <file_exists path="memory-bank/progress.md"/>
      </and>
    </condition>
    <enforcement>
      <block_all_tools_until>memory_bank_files_read</block_all_tools_until>
      <required_status>[MEMORY BANK: ACTIVE]</required_status>
      <violation_message>CRITICAL: Cannot proceed without reading ALL Memory Bank files first. This session is BLOCKED until Memory Bank compliance.</violation_message>
    </enforcement>
  </rule>

  <!-- Tool Use Validation Rules -->
  <rule id="tool-validation-001" priority="high" blocking="true">
    <name>Pre-Tool Memory Bank Validation</name>
    <trigger>before_tool_use</trigger>
    <condition>
      <or>
        <not><status_contains>[MEMORY BANK: ACTIVE]</status_contains></not>
        <missing_file_read>memory-bank/activeContext.md</missing_file_read>
        <missing_file_read>memory-bank/workflowChecks.md</missing_file_read>
      </or>
    </condition>
    <enforcement>
      <block_tool_execution/>
      <require_memory_bank_reference/>
      <violation_message>BLOCKED: Tool use requires Memory Bank context. Must reference activeContext.md and workflowChecks.md before proceeding.</violation_message>
    </enforcement>
  </rule>

  <!-- Critical Operations Rules -->
  <rule id="completion-001" priority="critical" blocking="true">
    <name>Completion Memory Bank Sync</name>
    <trigger>attempt_completion</trigger>
    <condition>
      <or>
        <no_memory_bank_updates_in_session/>
        <missing_git_commit_with_memory_bank/>
        <stale_memory_bank_files age_minutes="15"/>
      </or>
    </condition>
    <enforcement>
      <block_completion/>
      <require_memory_bank_update/>
      <require_git_commit/>
      <violation_message>CRITICAL BLOCK: attempt_completion prohibited without Memory Bank updates + git commit. Session continuity requires Memory Bank synchronization.</violation_message>
    </enforcement>
  </rule>

  <!-- Git Workflow Rules -->
  <rule id="git-001" priority="high" blocking="true">
    <name>Git Commit Memory Bank Inclusion</name>
    <trigger>git_commit</trigger>
    <condition>
      <and>
        <memory_bank_files_modified/>
        <not><memory_bank_included_in_commit/></not>
      </and>
    </condition>
    <enforcement>
      <block_commit/>
      <auto_include_memory_bank_files/>
      <violation_message>BLOCKED: Git commits must include Memory Bank files when modified. Auto-including memory-bank/* files.</violation_message>
    </enforcement>
  </rule>

  <!-- Response Format Rules -->
  <rule id="response-format-001" priority="medium" blocking="false">
    <name>Memory Bank Active Status Requirement</name>
    <trigger>response_generation</trigger>
    <condition>
      <not><response_starts_with>[MEMORY BANK: ACTIVE]</response_starts_with></not>
    </condition>
    <enforcement>
      <auto_prepend_status>[MEMORY BANK: ACTIVE]</auto_prepend_status>
      <warning_message>WARNING: All responses must begin with [MEMORY BANK: ACTIVE] status. Auto-correcting.</warning_message>
    </enforcement>
  </rule>

  <!-- Memory Bank Update Triggers -->
  <rule id="update-trigger-001" priority="medium" blocking="false">
    <name>Automatic Memory Bank Update Triggers</name>
    <trigger>significant_change</trigger>
    <condition>
      <or>
        <implementation_decision_made/>
        <new_code_pattern_introduced/>
        <architectural_change/>
        <progress_milestone_reached/>
      </or>
    </condition>
    <enforcement>
      <auto_update_memory_bank/>
      <timestamp_entry/>
      <require_rationale/>
      <target_files>
        <file>memory-bank/decisionLog.md</file>
        <file>memory-bank/systemPatterns.md</file>
        <file>memory-bank/activeContext.md</file>
        <file>memory-bank/progress.md</file>
      </target_files>
    </enforcement>
  </rule>

  <!-- Emergency Override Protocol -->
  <rule id="emergency-override-001" priority="critical" blocking="false">
    <name>Emergency Override with Documentation</name>
    <trigger>explicit_override_request</trigger>
    <condition>
      <and>
        <user_explicit_permission/>
        <emergency_justification_provided/>
      </and>
    </condition>
    <enforcement>
      <allow_temporary_override/>
      <log_override_to_memory_bank/>
      <schedule_workflow_restoration/>
      <override_status>[OVERRIDE ACTIVE]</override_status>
      <restoration_reminder interval="10_minutes"/>
    </enforcement>
  </rule>

  <!-- File Access Control Rules -->
  <rule id="file-access-001" priority="high" blocking="true">
    <name>Memory Bank File Protection</name>
    <trigger>file_modification</trigger>
    <condition>
      <and>
        <file_path_matches>memory-bank/*.md</file_path_matches>
        <not><proper_workflow_context/></not>
      </and>
    </condition>
    <enforcement>
      <require_context_reference/>
      <require_timestamp/>
      <backup_before_modification/>
      <violation_message>Memory Bank files require proper context and timestamps. All modifications logged.</violation_message>
    </enforcement>
  </rule>

  <!-- Quality Gates Integration -->
  <rule id="quality-gates-001" priority="high" blocking="true">
    <name>Quality Gates Validation</name>
    <trigger>task_completion</trigger>
    <condition>
      <not><quality_gates_passed/></not>
    </condition>
    <enforcement>
      <block_task_completion/>
      <require_quality_gate_verification/>
      <reference_file>memory-bank/qualityGates.md</reference_file>
      <violation_message>BLOCKED: Task completion requires passing quality gates. Check memory-bank/qualityGates.md for requirements.</violation_message>
    </enforcement>
  </rule>

  <!-- Workflow Health Monitoring -->
  <rule id="health-monitoring-001" priority="low" blocking="false">
    <name>Workflow Health Assessment</name>
    <trigger>periodic_check</trigger>
    <interval>5_minutes</interval>
    <condition>
      <always/>
    </condition>
    <enforcement>
      <assess_workflow_health/>
      <update_health_indicators/>
      <color_status>
        <green>Memory Bank read → Work → Memory Bank updated → Git committed</green>
        <yellow>Memory Bank read but no updates for >5 actions</yellow>
        <red>Working without Memory Bank or blocked attempt_completion</red>
      </color_status>
    </enforcement>
  </rule>

  <!-- Mode-Specific Rules -->
  <rule id="mode-code-001" priority="medium" blocking="true">
    <name>Code Mode Memory Bank Requirements</name>
    <trigger>mode_switch</trigger>
    <condition>
      <and>
        <current_mode>code</current_mode>
        <code_changes_planned/>
      </and>
    </condition>
    <enforcement>
      <require_pattern_consultation>memory-bank/systemPatterns.md</require_pattern_consultation>
      <block_major_changes_without_context/>
      <auto_update_triggers>
        <trigger>implementation_decisions</trigger>
        <trigger>new_code_patterns</trigger>
        <trigger>technical_debt_decisions</trigger>
      </auto_update_triggers>
    </enforcement>
  </rule>

  <!-- UMB (Update Memory Bank) Command -->
  <rule id="umb-command-001" priority="critical" blocking="false">
    <name>Enhanced Update Memory Bank Command</name>
    <trigger>command_received</trigger>
    <command_pattern>^(Update Memory Bank|UMB)$</command_pattern>
    <condition>
      <always/>
    </condition>
    <enforcement>
      <halt_current_task/>
      <acknowledge_command>[MEMORY BANK: UPDATING]</acknowledge_command>
      <execute_comprehensive_update/>
      <cross_mode_sync/>
      <preserve_activity_context/>
      <override_mode_restrictions/>
      <completion_message>Memory Bank fully synchronized. All mode contexts preserved. Session can be safely closed.</completion_message>
    </enforcement>
  </rule>

</rules>