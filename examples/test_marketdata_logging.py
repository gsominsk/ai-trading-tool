#!/usr/bin/env python3
"""
Phase 5 Logging Demo - Market Data Service Flow
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ MarketDataService –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import sys
import os
sys.path.append('.')

from src.logging_system.logger_config import configure_ai_logging
from src.market_data.market_data_service import MarketDataService

print('üéØ Phase 5 Logging Demo - Market Data Service')
print('=' * 50)

# Configure DEBUG logging for FULL log with raw data
configure_ai_logging(
    log_level="DEBUG",  # DEBUG –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ª–æ–≥–∞ —Å —Å—ã—Ä—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    log_file="logs/demo_marketdata_full.log",
    console_output=True,
    filter_http_noise=True
)

# Create service
service = MarketDataService(enable_logging=True, fail_fast=False)

# Run market data flow
symbols = ["BTCUSDT", "ETHUSDT", "ADAUSDT"]

for symbol in symbols:
    print(f'\nüìä Getting market data for {symbol}...')
    try:
        data = service.get_market_data(symbol)
        print(f'‚úÖ {symbol}: RSI={data.rsi_14:.2f}, Price=${data.h1_candles.iloc[-1]["close"]:.2f}')
    except Exception as e:
        print(f'‚ùå {symbol}: Error - {e}')

print(f'\nüéâ Demo completed! Check stderr for structured logs.')